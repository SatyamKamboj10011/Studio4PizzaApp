name: Deploy React App with Backend and Security Scan

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: 🚀 Deploy to Apache Server
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Install SSH & SSHPass
        run: sudo apt-get install -y sshpass

      - name: 📦 Install Dependencies & Build React App
        working-directory: ./pizza-app  # go into your project folder
        run: |
          export CI=false
          npm install
          npm run build

      - name: 🚚 Upload React Build to Apache Server
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          echo "🧹 Cleaning old build..."
          sshpass -p "$SERVER_PASSWORD" ssh -tt -o StrictHostKeyChecking=no $SERVER_USERNAME@$SERVER_HOST << 'EOF'
            sudo rm -rf /var/www/html/*
            exit
          EOF

          echo "📤 Uploading new React build..."
          sshpass -p "$SERVER_PASSWORD" scp -r pizza-app/build/* $SERVER_USERNAME@$SERVER_HOST:/var/www/html/

      - name: 🚚 Upload Backend to Server
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          echo "📤 Uploading backend files..."
          sshpass -p "$SERVER_PASSWORD" scp -r pizza-app/pizza-backend $SERVER_USERNAME@$SERVER_HOST:/var/www/

      - name: 🚀 Start Node.js Backend with PM2
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          sshpass -p "$SERVER_PASSWORD" ssh -tt -o StrictHostKeyChecking=no $SERVER_USERNAME@$SERVER_HOST << 'EOF'
            echo "🔄 Starting backend..."
            cd /var/www/pizza-backend
            npm install
            pm2 start server.js || pm2 restart server.js
            pm2 save
            exit
          EOF

  zap-scan:
    name: 🛡️ OWASP ZAP Security Scan
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: 🐳 Install Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          docker --version

      - name: 🔎 Run OWASP ZAP Full Scan
        run: |
          docker pull zaproxy/zap-stable
          docker run -v $(pwd):/zap/wrk/:rw -t zaproxy/zap-stable zap-full-scan.py \
            -t http://${{ secrets.SERVER_HOST }}/ -a -I
